name: Build and deploy Node.js app to Azure Web App - Mentally

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: npm install
        run: npm install

      - name: Create web.config
        run: |
          echo '<?xml version="1.0" encoding="utf-8"?>' > web.config
          echo '<configuration>' >> web.config
          echo '  <system.webServer>' >> web.config
          echo '    <handlers>' >> web.config
          echo '      <add name="iisnode" path="backend/server.js" verb="*" modules="iisnode" />' >> web.config
          echo '    </handlers>' >> web.config
          echo '    <rewrite>' >> web.config
          echo '      <rules>' >> web.config
          echo '        <rule name="nodejs">' >> web.config
          echo '          <match url="/*" />' >> web.config
          echo '          <action type="Rewrite" url="backend/server.js" />' >> web.config
          echo '        </rule>' >> web.config
          echo '      </rules>' >> web.config
          echo '    </rewrite>' >> web.config
          echo '    <iisnode watchedFiles=".js;node_modules\;routes\.js;views\.js" nodeProcessCommandLine="node --max-old-space-size=4096" loggingEnabled="true" debuggingEnabled="false" devErrorsEnabled="true" />' >> web.config
          echo '    <staticContent>' >> web.config
          echo '      <mimeMap fileExtension=".json" mimeType="application/json" />' >> web.config
          echo '      <mimeMap fileExtension=".css" mimeType="text/css" />' >> web.config
          echo '      <mimeMap fileExtension=".js" mimeType="application/javascript" />' >> web.config
          echo '      <mimeMap fileExtension=".svg" mimeType="image/svg+xml" />' >> web.config
          echo '      <mimeMap fileExtension=".woff" mimeType="application/font-woff" />' >> web.config
          echo '      <mimeMap fileExtension=".woff2" mimeType="application/font-woff2" />' >> web.config
          echo '    </staticContent>' >> web.config
          echo '    <httpErrors existingResponse="PassThrough" />' >> web.config
          echo '  </system.webServer>' >> web.config
          echo '</configuration>' >> web.config

      - name: Create .env file
        run: |
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" > .env
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env
          echo "PORT=5000" >> .env
          echo "AT_USERNAME=${{ secrets.AT_USERNAME }}" >> .env
          echo "AT_API_KEY=${{ secrets.AT_API_KEY }}" >> .env
          echo "NODE_ENV=production" >> .env

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Deploy to Azure Web App using Publish Profile
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'mentally'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_MENTALLY }}
