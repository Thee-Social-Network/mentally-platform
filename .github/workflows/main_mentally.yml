name: Build and deploy Node.js app to Azure Web App - mentally

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: npm install and build
        run: |
          npm install
          npm run build --if-present

      - name: Create web.config
        run: |
          echo '<?xml version="1.0" encoding="utf-8"?>' > web.config
          echo '<configuration>' >> web.config
          echo '  <system.webServer>' >> web.config
          echo '    <handlers>' >> web.config
          echo '      <add name="iisnode" path="src/server.js" verb="*" modules="iisnode" />' >> web.config
          echo '    </handlers>' >> web.config
          echo '    <rewrite>' >> web.config
          echo '      <rules>' >> web.config
          echo '        <rule name="nodejs">' >> web.config
          echo '          <match url="/*" />' >> web.config
          echo '          <action type="Rewrite" url="src/server.js" />' >> web.config
          echo '        </rule>' >> web.config
          echo '      </rules>' >> web.config
          echo '    </rewrite>' >> web.config
          echo '    <iisnode watchedFiles=".js;node_modules\;routes\.js;views\.js" />' >> web.config
          echo '  </system.webServer>' >> web.config
          echo '</configuration>' >> web.config

      - name: Create .env file
        run: |
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" > .env
          echo "SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> .env
          echo "SUPABASE_SERVICE_KEY=${{ secrets.SUPABASE_SERVICE_KEY }}" >> .env
          echo "SESSION_SECRET=${{ secrets.SESSION_SECRET }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "GOOGLE_CALLBACK_URL=https://mentally.azurewebsites.net/auth/google/callback" >> .env
          echo "BASE_URL=https://mentally.azurewebsites.net" >> .env
          echo "PORT=3000" >> .env
          echo "NODE_ENV=production" >> .env

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Deploy to Azure Web App using Publish Profile
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'mentally'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_MENTALLY }}

  create-release:
    runs-on: ubuntu-latest
    needs: deploy
    permissions:
      contents: write
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Get version from package.json
        id: package_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package_version.outputs.version }}-${{ steps.package_version.outputs.timestamp }}
          release_name: Release v${{ steps.package_version.outputs.version }} (${{ steps.package_version.outputs.timestamp }})
          body: |
            Deployment timestamp: ${{ steps.package_version.outputs.timestamp }}
            * Automatic release from CI/CD pipeline
            * Deployed to Azure Web App - mentally
          draft: false
          prerelease: false
